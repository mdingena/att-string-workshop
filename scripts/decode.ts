/**
 * ⚠️ DO NOT EDIT THIS FILE ⚠️
 */

import { BinaryData, Prefab } from 'att-string-transcoder';
import { existsSync, writeFileSync } from 'node:fs';
import { dirname, join } from 'node:path';
import { fileURLToPath } from 'node:url';
import { inspect } from 'node:util';

/**
 * ⚠️ DO NOT EDIT THIS FILE ⚠️
 */

const filePath = process.argv[2];

/**
 * ⚠️ DO NOT EDIT THIS FILE ⚠️
 */

if (typeof filePath === 'undefined') {
  console.error(
    `You must specify the path of a save string file. For example:\nnpm run decode strings/example-damaged-longsword.ts`
  );
  process.exit(1);
}

/**
 * ⚠️ DO NOT EDIT THIS FILE ⚠️
 */

const resolvedFilePath = fileURLToPath(new URL(join(dirname(import.meta.url), '..', filePath)));

/**
 * ⚠️ DO NOT EDIT THIS FILE ⚠️
 */

if (!existsSync(resolvedFilePath)) {
  console.error(`Could not find save string file: ${resolvedFilePath}`);
  process.exit(2);
}

/**
 * ⚠️ DO NOT EDIT THIS FILE ⚠️
 */

const importKey = process.argv[3] ?? 'default';
const module = await import(resolvedFilePath);
const keys = Object.keys(module);

/**
 * ⚠️ DO NOT EDIT THIS FILE ⚠️
 */

if (keys.length === 0) {
  console.error(
    `Save string file "${filePath}" has no exports. You must export a save string from this file to decode it.`
  );
  process.exit(3);
}

/**
 * ⚠️ DO NOT EDIT THIS FILE ⚠️
 */

const { [importKey]: saveString } = module;

/**
 * ⚠️ DO NOT EDIT THIS FILE ⚠️
 */

if (typeof saveString === 'undefined') {
  if (importKey === 'default') {
    console.error(`Creation file "${filePath}" does not have a default export.`);
  } else {
    console.error(`Creation file "${filePath}" does not have an export named "${importKey}".`);
  }

  console.log(`Did you mean one of these exports?${keys.map(key => `\n- ${key}`).join('')}`);
  process.exit(4);
}

/**
 * ⚠️ DO NOT EDIT THIS FILE ⚠️
 */

if (!BinaryData.isSaveString(saveString)) {
  console.error(
    `"${importKey}" is not a valid ATT save string. Please make sure it is formatted correctly. Did you maybe forget to copy the trailing comma at the end?`
  );
  process.exit(4);
}

/**
 * ⚠️ DO NOT EDIT THIS FILE ⚠️
 */

const prefab = Prefab.fromSaveString(saveString);
prefab.inspect();

/**
 * ⚠️ DO NOT EDIT THIS FILE ⚠️
 */

writeFileSync('./decoded.txt', inspect(prefab, false, null));
console.log(
  `\nDecoded "${importKey}" from "./${filePath}".\nResults have also been saved in "./decoded.txt".`
);

/**
 * ⚠️ DO NOT EDIT THIS FILE ⚠️
 */
